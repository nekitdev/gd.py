[tool.poetry]
name = "gd.py"
version = "1.0.2"
description = "An API wrapper for Geometry Dash written in Python."
authors = ["nekitdev"]
license = "MIT"

readme = "README.md"

homepage = "https://github.com/nekitdev/gd.py"
repository = "https://github.com/nekitdev/gd.py"
documentation = "https://nekitdev.github.io/gd.py"

keywords = ["python", "gd"]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]

[tool.poetry.urls]
Discord = "https://nekit.dev/discord"
Issues = "https://github.com/nekitdev/gd.py/issues"

[[tool.poetry.packages]]
include = "gd"

[tool.poetry.scripts]
gd = "gd.main:gd"

[tool.poetry.dependencies]
python = ">= 3.8"

aiohttp = ">= 3.9.1"
click = ">= 8.1.7"
tqdm = ">= 4.66.1"
yarl = ">= 1.9.4"

attrs = ">= 23.1.0"
cattrs = ">= 23.2.3"

pendulum = ">= 3.0.0"

entrypoint = ">= 1.4.0"
versions = ">= 1.6.1"

named = ">= 1.3.0"

xor-cipher = ">= 3.0.1"
colors-core = ">= 1.0.1"

async-extensions = ">= 1.4.1"
iters = ">= 0.15.0"

funcs = ">= 0.8.0"

pycapnp = ">= 1.3.0"

[tool.poetry.dependencies.lxml]
version = ">= 4.9.3"
optional = true

[tool.poetry.dependencies.pillow]
version = ">= 10.1.0"
optional = true

[tool.poetry.dependencies.pycryptodome]
version = ">= 3.19.0"
optional = true

[tool.poetry.dependencies.fastapi]
version = ">= 0.105.0"
optional = true

[tool.poetry.dependencies.uvicorn]
version = ">= 0.24.0"
optional = true
extras = ["standard"]

[tool.poetry.extras]
crypto = ["pycryptodome"]
image = ["pillow"]
speed = ["lxml"]
server = ["fastapi", "uvicorn"]

[tool.poetry.group.format]
optional = true

[tool.poetry.group.format.dependencies]
black = "23.12.0"
flake8-pyproject = "1.2.3"
isort = "5.13.2"

[tool.poetry.group.format.dependencies.flake8]
version = "6.1.0"
python = ">= 3.8.1"

[tool.poetry.group.check]
optional = true

[tool.poetry.group.check.dependencies]
mypy = "1.7.1"

types-pillow = "10.1.0.2"
types-tqdm = "4.66.0.5"
lxml-stubs = "0.4.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "8.0.1"
pytest-cov = "4.1.0"
pytest-benchmark = "4.0.0"
pytest-asyncio = "0.23.2"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "1.5.3"
mkdocs-material = "9.5.2"

[tool.poetry.group.docs.dependencies.mkdocstrings]
version = "0.24.0"
extras = ["python"]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
changelogging = "1.3.0"

[tool.flake8]
max_line_length = 100
ignore = [
    "E402",  # module level import not at top of file
    "E741",  # ambiguous variable name
    "F402",  # import module from line shadowed by loop variable
    "W503",  # line break before binary operator
]

[tool.black]
line_length = 100

[tool.isort]
line_length = 100
profile = "black"

[tool.pytest.ini_options]
addopts = "--cov gd"
testpaths = ["tests"]

[tool.coverage.run]
source = ["gd"]

[tool.coverage.report]
ignore_errors = true
exclude_lines = [
    "pragma: never",
    "pragma: no cover",
    "if TYPE_CHECKING",
    "@overload",
    "@required",
    "raise NotImplementedError",
    "raise AssertionError",
    "def __repr__",
]

[tool.coverage.html]
directory = "coverage"

[tool.mypy]
show_column_numbers = true

disallow_any_decorated = true
disallow_any_generics = true
warn_return_any = true

no_implicit_optional = true
strict_optional = true

strict_equality = true

disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
disallow_untyped_globals = true

disallow_incomplete_defs = true

warn_no_return = true
warn_unreachable = true

warn_redundant_casts = true
warn_unused_ignores = false  # compatibility

[tool.changelogging]
name = "gd.py"
version = "1.0.2"
url = "https://github.com/nekitdev/gd.py"
directory = "changes"
output = "CHANGELOG.md"

start_string = "<!-- changelogging: start -->"

title_format = "{version} ({date})"
issue_format = "[#{issue}]({url}/pull/{issue})"

bullet = "-"
wrap = true
wrap_size = 100

display = ["feature", "change", "fix", "security", "deprecation", "removal", "internal"]

[build-system]
requires = ["poetry-core >= 1.8.1"]
build-backend = "poetry.core.masonry.api"
